@model ConcertApp.Web.Models.Booking

@{
    ViewBag.Title = "Create";
}

<h2>Select Seats</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Booking</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group hide">
            @Html.LabelFor(model => model.BookingId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.TextBoxFor(model => model.BookingId, new {@Value ="1"})*@
                @Html.TextBoxFor(model => model.BookingId, new { @Value = "1"})
                @Html.ValidationMessageFor(model => model.BookingId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ConcertId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConcertId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConcertId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="seat-map"></div>

        <div id="NoOfSeats"></div>
        
        <a href="javascript:history.go(0)">Click to Reset Seat</a>

        <div class="form-group">
            @Html.LabelFor(model => model.Seats, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Seats, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Seats, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts{
<script src="~/Scripts/jquery.seat-charts.js"></script>
    <script>
        var seats = [];
        $(document).ready(function() {
            var sc = $('#seat-map').seatCharts({
                map: [
                    'aaaaaaaaaaaaaaaa',
                    'aaaaaaaaaaaaaaaa',
                    'aaaaaaaaaaaaaaaa',
                    'aaaaaaaaaaaaaaaa',
                    'aaccccccccccccaa'
                ],
                naming: {
                    top: true,
                    columns: [
                        '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16'
                    ],
                    rows: ['A', 'B', 'C', 'D', 'E']

                },
                seats: {
                    a: {
                        price: 24.99,
                        classes: 'front-seat' //your custom CSS class
                    },
                    b: {
                        price: 49.99,
                        classes: 'front-seat'
                    }
                },
                click: function() {
                    if (this.status() == 'available') {
                        //do some stuff, i.e. add to the cart
                        seats.push(this.settings.id.toString());
                        document.getElementById('Seats').value = seats.toString();
                        document.getElementById('NoOfSeats')
                            .innerHTML = "You have selected : " + seats.length + " seats.";
                        document.getElementById('Price').value = CalculateAmount(seats.length);
                        return 'selected';
                    } else if (this.status() == 'selected') {
                        //seat has been vacated
                        return 'available';
                    } else if (this.status() == 'unavailable') {
                        //seat has been already booked
                        return 'unavailable';
                    } else {
                        return this.style();
                    }
                }
            });

            //Make all available 'c' seats unavailable
            sc.find('c.available').status('unavailable');

            /*
            Get seats with ids 2_6, 1_7 (more on ids later on),
            put them in a jQuery set and change some css
            */
            sc.get(['2_6', '1_7']).node().css({
                color: '#ffcfcf'
            });

            //console.log('Seat 1_2 costs ' + sc.get('1_2').data().price + ' and is currently ' + sc.status('1_2'));
        });

        function CalculateAmount(num) {
            return num * 24.99;
        }

        //$(window).load(function() {
        //    $.ajax({
        //        url: '/User/GetUserID',
        //        method: 'GET',
        //        success: function(data) {
        //            if (data == 0) {
        //                alert('You must be logged in!');
        //                return window.location.href = "/User/Login";
        //            } else {
        //                return document.getElementById('UserId').value = data;
        //            }

        //        }
        //    });
        //});

    </script>
}